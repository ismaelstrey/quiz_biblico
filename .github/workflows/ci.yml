name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bible_quiz_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/bible_quiz_test" >> $GITHUB_ENV
        echo "NEXTAUTH_SECRET=test-secret-key-for-ci" >> $GITHUB_ENV
        echo "NEXTAUTH_URL=http://localhost:3000" >> $GITHUB_ENV
        echo "NODE_ENV=test" >> $GITHUB_ENV
    
    - name: Generate Prisma Client
      run: npx prisma generate
    
    - name: Run database migrations
      run: npx prisma db push
    
    - name: Check code formatting
      run: npm run format:check
    
    - name: Run TypeScript type checking
      run: npm run type-check
    
    - name: Run ESLint
      run: npm run lint || echo "ESLint warnings found, but continuing..."
    
    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
    
    - name: Build application
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to production
      run: |
        echo "ðŸš€ Deployment step - configure with your hosting provider"
        echo "This could be Vercel, Netlify, AWS, etc."
        # Add your deployment commands here